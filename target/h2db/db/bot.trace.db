2019-10-01 21:33:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DATABASECHANGELOGLOCK" not found; SQL statement:
SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK [42102-199]
2019-10-02 11:00:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at jdk.internal.reflect.GeneratedMethodAccessor551.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.jdbc.core.JdbcTemplate$CloseSuppressingInvocationHandler.invoke(JdbcTemplate.java:1524)
	at com.sun.proxy.$Proxy270.getMetaData(Unknown Source)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:123)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:327)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 11:00:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:232)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:359)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:346)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:313)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:333)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 11:07:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at jdk.internal.reflect.GeneratedMethodAccessor438.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.jdbc.core.JdbcTemplate$CloseSuppressingInvocationHandler.invoke(JdbcTemplate.java:1524)
	at com.sun.proxy.$Proxy270.getMetaData(Unknown Source)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:123)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:327)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 11:07:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:232)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:359)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:346)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:313)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:333)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 12:53:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at jdk.internal.reflect.GeneratedMethodAccessor441.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.jdbc.core.JdbcTemplate$CloseSuppressingInvocationHandler.invoke(JdbcTemplate.java:1524)
	at com.sun.proxy.$Proxy270.getMetaData(Unknown Source)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:123)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:327)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 12:53:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:232)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:359)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:346)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:313)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:333)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 12:53:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(SQLErrorCodesFactory.java:214)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.setDataSource(SQLErrorCodeSQLExceptionTranslator.java:136)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(SQLErrorCodeSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.JdbcAccessor.getExceptionTranslator(JdbcAccessor.java:122)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:335)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 12:53:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:232)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:359)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:346)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:313)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:338)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(SQLErrorCodesFactory.java:214)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.setDataSource(SQLErrorCodeSQLExceptionTranslator.java:136)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(SQLErrorCodeSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.JdbcAccessor.getExceptionTranslator(JdbcAccessor.java:122)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:335)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 13:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.jdbc.core.JdbcTemplate$CloseSuppressingInvocationHandler.invoke(JdbcTemplate.java:1524)
	at com.sun.proxy.$Proxy270.getMetaData(Unknown Source)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:123)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:327)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 13:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:232)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:359)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:346)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:313)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:333)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 13:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(SQLErrorCodesFactory.java:214)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.setDataSource(SQLErrorCodeSQLExceptionTranslator.java:136)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(SQLErrorCodeSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.JdbcAccessor.getExceptionTranslator(JdbcAccessor.java:122)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:335)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 13:06:06 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:232)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:359)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:346)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:313)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:338)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:356)
	at org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(SQLErrorCodesFactory.java:214)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.setDataSource(SQLErrorCodeSQLExceptionTranslator.java:136)
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.<init>(SQLErrorCodeSQLExceptionTranslator.java:99)
	at org.springframework.jdbc.support.JdbcAccessor.getExceptionTranslator(JdbcAccessor.java:122)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1442)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:335)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-02 13:11:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at jdk.internal.reflect.GeneratedMethodAccessor437.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.jdbc.core.JdbcTemplate$CloseSuppressingInvocationHandler.invoke(JdbcTemplate.java:1524)
	at com.sun.proxy.$Proxy270.getMetaData(Unknown Source)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:123)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:327)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedByInterruptException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:193)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:28)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getTables(JdbcDatabaseSnapshot.java:791)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:33)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedByInterruptException
	at java.base/java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:199)
	at java.base/sun.nio.ch.FileChannelImpl.endBlocking(FileChannelImpl.java:162)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:388)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 57 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$4.fastFetchQuery(JdbcDatabaseSnapshot.java:820)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:347)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:70)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getTables(JdbcDatabaseSnapshot.java:791)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:33)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 59 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getTables(JdbcDatabaseSnapshot.java:791)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:33)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 59 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getTables(JdbcDatabaseSnapshot.java:791)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:33)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 59 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.database.AbstractJdbcDatabase.getSchemaFromJdbcInfo(AbstractJdbcDatabase.java:1338)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.readTable(TableSnapshotGenerator.java:91)
	at liquibase.snapshot.jvm.TableSnapshotGenerator.snapshotObject(TableSnapshotGenerator.java:37)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:66)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:69)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 57 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.createParamsKey(ResultSetCache.java:193)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:28)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 45 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.CatalogAndSchema.standardize(CatalogAndSchema.java:116)
	at liquibase.CatalogAndSchema.customize(CatalogAndSchema.java:138)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$3.fastFetchQuery(JdbcDatabaseSnapshot.java:576)
	at liquibase.snapshot.ResultSetCache$SingleResultSetExtractor.fastFetch(ResultSetCache.java:347)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:70)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 47 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:160)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.snapshot.ResultSetCache$RowData.createKey(ResultSetCache.java:186)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:153)
	at liquibase.snapshot.ResultSetCache$RowData.permute(ResultSetCache.java:161)
	at liquibase.snapshot.ResultSetCache$RowData.permutations(ResultSetCache.java:146)
	at liquibase.snapshot.ResultSetCache$RowData.getKeyPermutations(ResultSetCache.java:139)
	at liquibase.snapshot.ResultSetCache.get(ResultSetCache.java:74)
	at liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData.getColumns(JdbcDatabaseSnapshot.java:539)
	at liquibase.snapshot.jvm.ColumnSnapshotGenerator.addTo(ColumnSnapshotGenerator.java:106)
	at liquibase.snapshot.jvm.JdbcSnapshotGenerator.snapshot(JdbcSnapshotGenerator.java:79)
	at liquibase.snapshot.SnapshotGeneratorChain.snapshot(SnapshotGeneratorChain.java:49)
	at liquibase.snapshot.DatabaseSnapshot.include(DatabaseSnapshot.java:286)
	at liquibase.snapshot.DatabaseSnapshot.init(DatabaseSnapshot.java:102)
	at liquibase.snapshot.DatabaseSnapshot.<init>(DatabaseSnapshot.java:59)
	at liquibase.snapshot.JdbcDatabaseSnapshot.<init>(JdbcDatabaseSnapshot.java:38)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:217)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:246)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 48 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "java.nio.channels.ClosedChannelException"; "Can not get size"; SQL statement:
SELECT NAME, VALUE FROM INFORMATION_SCHEMA.SETTINGS WHERE NAME IN (?, ?, ?, ?) [90031-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convertIOException(DbException.java:392)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1167)
	at org.h2.index.MetaIndex.find(MetaIndex.java:51)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:115)
	at org.h2.jdbc.JdbcConnection.getSettings(JdbcConnection.java:2153)
	at org.h2.jdbc.JdbcDatabaseMetaData.supportsMixedCaseIdentifiers(JdbcDatabaseMetaData.java:2605)
	at liquibase.database.AbstractJdbcDatabase.isCaseSensitive(AbstractJdbcDatabase.java:668)
	at liquibase.diff.compare.core.DefaultDatabaseObjectComparator.nameMatches(DefaultDatabaseObjectComparator.java:122)
	at liquibase.diff.compare.core.TableComparator.isSameObject(TableComparator.java:35)
	at liquibase.diff.compare.DatabaseObjectComparatorChain.isSameObject(DatabaseObjectComparatorChain.java:50)
	at liquibase.diff.compare.DatabaseObjectComparatorFactory.isSameObject(DatabaseObjectComparatorFactory.java:144)
	at liquibase.structure.DatabaseObjectCollection.get(DatabaseObjectCollection.java:125)
	at liquibase.snapshot.DatabaseSnapshot.get(DatabaseSnapshot.java:504)
	at liquibase.snapshot.SnapshotGeneratorFactory.createSnapshot(SnapshotGeneratorFactory.java:247)
	at liquibase.snapshot.SnapshotGeneratorFactory.getDatabaseChangeLogTable(SnapshotGeneratorFactory.java:254)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:108)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:373)
	at org.h2.store.fs.FileNio.size(FilePathNio.java:58)
	at org.h2.table.MetaTable.generateRows(MetaTable.java:1165)
	... 39 more
2019-10-03 11:08:40 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Reading from nio:/Users/marktripoli/guildo/target/h2db/db/bot.mv.db failed; file length -1 read length 6144 at 596127 [1.4.199/1]"; SQL statement:
SELECT MD5SUM FROM PUBLIC.DATABASECHANGELOG WHERE MD5SUM IS NOT NULL [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.command.Command.executeQuery(Command.java:219)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:85)
	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java)
	at liquibase.executor.jvm.JdbcExecutor$QueryStatementCallback.doInStatement(JdbcExecutor.java:419)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:57)
	at liquibase.executor.jvm.JdbcExecutor.query(JdbcExecutor.java:138)
	at liquibase.executor.jvm.JdbcExecutor.query(JdbcExecutor.java:146)
	at liquibase.executor.jvm.JdbcExecutor.queryForList(JdbcExecutor.java:211)
	at liquibase.executor.jvm.JdbcExecutor.queryForList(JdbcExecutor.java:206)
	at liquibase.changelog.StandardChangeLogHistoryService.init(StandardChangeLogHistoryService.java:244)
	at liquibase.Liquibase.checkLiquibaseTables(Liquibase.java:1219)
	at liquibase.Liquibase.update(Liquibase.java:193)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.IllegalStateException: Reading from nio:/Users/marktripoli/guildo/target/h2db/db/bot.mv.db failed; file length -1 read length 6144 at 596127 [1.4.199/1]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.DataUtils.readFully(DataUtils.java:420)
	at org.h2.mvstore.FileStore.readFully(FileStore.java:98)
	at org.h2.mvstore.MVStore.readBufferForPage(MVStore.java:1048)
	at org.h2.mvstore.MVStore.readPage(MVStore.java:2186)
	at org.h2.mvstore.MVMap.readPage(MVMap.java:554)
	at org.h2.mvstore.Page$NonLeaf.getChildPage(Page.java:1086)
	at org.h2.mvstore.Cursor.traverseDown(Cursor.java:165)
	at org.h2.mvstore.Cursor.<init>(Cursor.java:31)
	at org.h2.mvstore.tx.TransactionMap$TMIterator.<init>(TransactionMap.java:701)
	at org.h2.mvstore.tx.TransactionMap$EntryIterator.<init>(TransactionMap.java:664)
	at org.h2.mvstore.tx.TransactionMap.entryIterator(TransactionMap.java:586)
	at org.h2.mvstore.db.MVPrimaryIndex.find(MVPrimaryIndex.java:244)
	at org.h2.index.BaseIndex.find(BaseIndex.java:132)
	at org.h2.index.IndexCursor.find(IndexCursor.java:163)
	at org.h2.table.TableFilter.next(TableFilter.java:475)
	at org.h2.command.dml.Select$LazyResultQueryFlat.fetchNextRow(Select.java:1882)
	at org.h2.result.LazyResult.hasNext(LazyResult.java:101)
	at org.h2.result.LazyResult.next(LazyResult.java:60)
	at org.h2.command.dml.Select.queryFlat(Select.java:742)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:884)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:151)
	at org.h2.command.dml.Query.query(Query.java:435)
	at org.h2.command.dml.Query.query(Query.java:397)
	at org.h2.command.CommandContainer.query(CommandContainer.java:145)
	at org.h2.command.Command.executeQuery(Command.java:202)
	... 22 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:790)
	at org.h2.store.fs.FileNio.read(FilePathNio.java:74)
	at org.h2.mvstore.DataUtils.readFully(DataUtils.java:406)
	... 46 more
2019-10-03 11:08:40 database: flush
org.h2.message.DbException: General error: "java.lang.IllegalStateException: Writing to nio:/Users/marktripoli/guildo/target/h2db/db/bot.mv.db failed; length 4096 at 659456 [1.4.199/2]" [50000-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.message.DbException.convert(DbException.java:347)
	at org.h2.mvstore.db.MVTableEngine$1.uncaughtException(MVTableEngine.java:90)
	at org.h2.mvstore.MVStore.handleException(MVStore.java:2787)
	at org.h2.mvstore.MVStore.panic(MVStore.java:441)
	at org.h2.mvstore.MVStore.write(MVStore.java:937)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1332)
	at org.h2.mvstore.MVStore.store(MVStore.java:1190)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1166)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:312)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:384)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1612)
	at org.h2.engine.Database.closeImpl(Database.java:1509)
	at org.h2.engine.Database.close(Database.java:1417)
	at org.h2.engine.OnExitDatabaseCloser.onShutdown(OnExitDatabaseCloser.java:85)
	at org.h2.engine.OnExitDatabaseCloser.run(OnExitDatabaseCloser.java:114)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: General error: "java.lang.IllegalStateException: Writing to nio:/Users/marktripoli/guildo/target/h2db/db/bot.mv.db failed; length 4096 at 659456 [1.4.199/2]" [50000-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 16 more
Caused by: java.lang.IllegalStateException: Writing to nio:/Users/marktripoli/guildo/target/h2db/db/bot.mv.db failed; length 4096 at 659456 [1.4.199/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:443)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:935)
	... 10 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:830)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:439)
	... 12 more
2019-10-03 11:08:40 database: close
org.h2.message.DbException: IO Exception: "Closing" [90028-199]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:402)
	at org.h2.engine.Database.closeOpenFilesAndUnlock(Database.java:1612)
	at org.h2.engine.Database.closeImpl(Database.java:1509)
	at org.h2.engine.Database.close(Database.java:1417)
	at org.h2.engine.OnExitDatabaseCloser.onShutdown(OnExitDatabaseCloser.java:85)
	at org.h2.engine.OnExitDatabaseCloser.run(OnExitDatabaseCloser.java:114)
Caused by: org.h2.jdbc.JdbcSQLNonTransientException: IO Exception: "Closing" [90028-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	... 7 more
Caused by: java.lang.IllegalStateException: Writing to nio:/Users/marktripoli/guildo/target/h2db/db/bot.mv.db failed; length 4096 at 659456 [1.4.199/2]
	at org.h2.mvstore.DataUtils.newIllegalStateException(DataUtils.java:883)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:443)
	at org.h2.mvstore.FileStore.writeFully(FileStore.java:113)
	at org.h2.mvstore.MVStore.write(MVStore.java:935)
	at org.h2.mvstore.MVStore.storeNow(MVStore.java:1332)
	at org.h2.mvstore.MVStore.store(MVStore.java:1190)
	at org.h2.mvstore.MVStore.commit(MVStore.java:1166)
	at org.h2.mvstore.tx.TransactionStore.close(TransactionStore.java:312)
	at org.h2.mvstore.db.MVTableEngine$Store.close(MVTableEngine.java:384)
	... 5 more
Caused by: java.nio.channels.ClosedChannelException
	at java.base/sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:150)
	at java.base/sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:830)
	at org.h2.store.fs.FileNio.write(FilePathNio.java:79)
	at org.h2.mvstore.DataUtils.writeFully(DataUtils.java:439)
	... 12 more
2019-10-03 12:10:34 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
select userstrike0_.id as id1_27_, userstrike0_.count as count2_27_, userstrike0_.discord_user_id as discord_5_27_, userstrike0_.guild_id as guild_id3_27_, userstrike0_.user_id as user_id4_27_ from user_strike userstrike0_ where userstrike0_.discord_user_id=? and userstrike0_.guild_id=? [42102-199]
2019-10-03 12:11:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 12:11:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:292)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 12:11:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1161)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 12:12:24 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
select userstrike0_.id as id1_27_, userstrike0_.count as count2_27_, userstrike0_.discord_user_id as discord_5_27_, userstrike0_.guild_id as guild_id3_27_, userstrike0_.user_id as user_id4_27_ from user_strike userstrike0_ where userstrike0_.discord_user_id=? and userstrike0_.guild_id=? [42102-199]
2019-10-03 12:14:23 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
select userstrike0_.id as id1_27_, userstrike0_.count as count2_27_, userstrike0_.discord_user_id as discord_5_27_, userstrike0_.guild_id as guild_id3_27_, userstrike0_.user_id as user_id4_27_ from user_strike userstrike0_ order by userstrike0_.id asc limit ? [42102-199]
2019-10-03 12:14:37 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
insert into user_strike (count, discord_user_id, guild_id, user_id, id) values (?, ?, ?, ?, ?) [42102-199]
2019-10-03 12:15:01 jdbc[4]: exception
org.h2.jdbc.JdbcSQLDataException: Cannot parse "TIMESTAMP" constant "back up" [22007-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:455)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:140)
	at org.h2.value.Value.convertToTimestamp(Value.java:1099)
	at org.h2.value.Value.convertTo(Value.java:778)
	at org.h2.value.Value.convertTo(Value.java:703)
	at org.h2.util.DateTimeUtils.convertTimestamp(DateTimeUtils.java:267)
	at org.h2.jdbc.JdbcResultSet.getTimestamp(JdbcResultSet.java:1008)
	at com.zaxxer.hikari.pool.HikariProxyResultSet.getTimestamp(HikariProxyResultSet.java)
	at org.hibernate.type.descriptor.sql.TimestampTypeDescriptor$2.doExtract(TimestampTypeDescriptor.java:83)
	at org.hibernate.type.descriptor.sql.BasicExtractor.extract(BasicExtractor.java:47)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:257)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:253)
	at org.hibernate.type.AbstractStandardBasicType.nullSafeGet(AbstractStandardBasicType.java:243)
	at org.hibernate.type.AbstractStandardBasicType.hydrate(AbstractStandardBasicType.java:329)
	at org.hibernate.persister.entity.AbstractEntityPersister.hydrate(AbstractEntityPersister.java:3041)
	at org.hibernate.loader.Loader.loadFromResultSet(Loader.java:1844)
	at org.hibernate.loader.Loader.hydrateEntityState(Loader.java:1772)
	at org.hibernate.loader.Loader.instanceNotYetLoaded(Loader.java:1745)
	at org.hibernate.loader.Loader.getRow(Loader.java:1598)
	at org.hibernate.loader.Loader.getRowFromResultSet(Loader.java:742)
	at org.hibernate.loader.Loader.processResultSet(Loader.java:1002)
	at org.hibernate.loader.Loader.doQuery(Loader.java:960)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:74)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:419)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:359)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:644)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:608)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy218.findAll(Unknown Source)
	at com.triippztech.guildo.service.moderation.MuteQueryService.findByCriteria(MuteQueryService.java:49)
	at com.triippztech.guildo.service.moderation.MuteQueryService$$FastClassBySpringCGLIB$$ace097ec.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.triippztech.guildo.aop.logging.LoggingAspect.logAround(LoggingAspect.java:86)
	at jdk.internal.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.triippztech.guildo.service.moderation.MuteQueryService$$EnhancerBySpringCGLIB$$b998163.findByCriteria(<generated>)
	at com.triippztech.guildo.web.rest.MuteResource.getAllMutes(MuteResource.java:97)
	at com.triippztech.guildo.web.rest.MuteResource$$FastClassBySpringCGLIB$$5814079e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.triippztech.guildo.aop.logging.LoggingAspect.logAround(LoggingAspect.java:86)
	at jdk.internal.reflect.GeneratedMethodAccessor96.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.triippztech.guildo.web.rest.MuteResource$$EnhancerBySpringCGLIB$$8f29fb5c.getAllMutes(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:892)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1039)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationCodeGrantFilter.doFilterInternal(OAuth2AuthorizationCodeGrantFilter.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.server.resource.web.BearerTokenAuthenticationFilter.doFilterInternal(BearerTokenAuthenticationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:160)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:118)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:61)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:132)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:269)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:133)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:130)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:249)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:78)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:99)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:376)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:830)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.lang.IllegalArgumentException: back up
	at org.h2.util.DateTimeUtils.parseDateValue(DateTimeUtils.java:366)
	at org.h2.util.DateTimeUtils.parseTimestamp(DateTimeUtils.java:528)
	at org.h2.value.ValueTimestamp.parse(ValueTimestamp.java:138)
	... 223 more
2019-10-03 12:26:22 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
insert into user_strike (count, discord_user_id, guild_id, user_id, id) values (?, ?, ?, ?, ?) [42102-199]
2019-10-03 12:27:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 12:27:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:292)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 12:27:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1161)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 12:36:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 13:11:09 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.getURL(JdbcConnection.java:76)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:68)
	at liquibase.executor.jvm.JdbcExecutor.query(JdbcExecutor.java:138)
	at liquibase.executor.jvm.JdbcExecutor.query(JdbcExecutor.java:146)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:154)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:169)
	at liquibase.executor.jvm.JdbcExecutor.queryForObject(JdbcExecutor.java:164)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:248)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 13:16:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 13:16:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:292)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 13:16:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1161)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:13:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
select userstrike0_.id as id1_27_, userstrike0_.count as count2_27_, userstrike0_.discord_user_id as discord_5_27_, userstrike0_.guild_id as guild_id3_27_, userstrike0_.user_id as user_id4_27_ from user_strike userstrike0_ where userstrike0_.discord_user_id=? and userstrike0_.guild_id=? [42102-199]
2019-10-03 14:14:50 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
select userstrike0_.id as id1_27_, userstrike0_.count as count2_27_, userstrike0_.discord_user_id as discord_5_27_, userstrike0_.guild_id as guild_id3_27_, userstrike0_.user_id as user_id4_27_ from user_strike userstrike0_ where userstrike0_.discord_user_id=? and userstrike0_.guild_id=? [42102-199]
2019-10-03 14:15:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:15:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:292)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:15:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1161)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:17:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
select userstrike0_.id as id1_27_, userstrike0_.count as count2_27_, userstrike0_.discord_user_id as discord_5_27_, userstrike0_.guild_id as guild_id3_27_, userstrike0_.user_id as user_id4_27_ from user_strike userstrike0_ where userstrike0_.discord_user_id=? and userstrike0_.guild_id=? [42102-199]
2019-10-03 14:23:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at jdk.internal.reflect.GeneratedMethodAccessor194.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.jdbc.core.JdbcTemplate$CloseSuppressingInvocationHandler.invoke(JdbcTemplate.java:1524)
	at com.sun.proxy.$Proxy268.getMetaData(Unknown Source)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:123)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:327)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:23:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:232)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:359)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:346)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:313)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:333)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:27:16 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "USER_STRIKE" not found; SQL statement:
select userstrike0_.id as id1_27_, userstrike0_.count as count2_27_, userstrike0_.discord_user_id as discord_5_27_, userstrike0_.guild_id as guild_id3_27_, userstrike0_.user_id as user_id4_27_ from user_strike userstrike0_ where userstrike0_.discord_user_id=? and userstrike0_.guild_id=? [42102-199]
2019-10-03 14:27:49 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getMetaData(JdbcConnection.java:397)
	at com.zaxxer.hikari.pool.ProxyConnection.getMetaData(ProxyConnection.java:354)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getMetaData(HikariProxyConnection.java)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.jdbc.core.JdbcTemplate$CloseSuppressingInvocationHandler.invoke(JdbcTemplate.java:1524)
	at com.sun.proxy.$Proxy268.getMetaData(Unknown Source)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:123)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:327)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:27:49 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:232)
	at org.springframework.jdbc.datasource.DataSourceUtils.doCloseConnection(DataSourceUtils.java:359)
	at org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:346)
	at org.springframework.jdbc.datasource.DataSourceUtils.releaseConnection(DataSourceUtils.java:313)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:333)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.getProduct(DataSourceHealthIndicator.java:119)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doDataSourceHealthCheck(DataSourceHealthIndicator.java:107)
	at org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator.doHealthCheck(DataSourceHealthIndicator.java:102)
	at org.springframework.boot.actuate.health.AbstractHealthIndicator.health(AbstractHealthIndicator.java:82)
	at org.springframework.boot.actuate.health.CompositeHealthIndicator.health(CompositeHealthIndicator.java:95)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getHealthStatus(EurekaHealthCheckHandler.java:110)
	at org.springframework.cloud.netflix.eureka.EurekaHealthCheckHandler.getStatus(EurekaHealthCheckHandler.java:106)
	at com.netflix.discovery.DiscoveryClient.refreshInstanceInfo(DiscoveryClient.java:1406)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:117)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:27:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:27:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:292)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:27:49 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1161)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:58:24 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 14:58:24 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:292)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 15:08:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:347)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1554)
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:109)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:221)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy207.findByUserId(Unknown Source)
	at com.triippztech.guildo.service.user.DiscordUserService.findByUserId(DiscordUserService.java:144)
	at com.triippztech.guildo.service.user.DiscordUserService.getDiscordUser(DiscordUserService.java:108)
	at com.triippztech.guildo.service.user.DiscordUserService$$FastClassBySpringCGLIB$$1c2a543f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.triippztech.guildo.aop.logging.LoggingAspect.logAround(LoggingAspect.java:86)
	at jdk.internal.reflect.GeneratedMethodAccessor101.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.triippztech.guildo.service.user.DiscordUserService$$EnhancerBySpringCGLIB$$c97a7d17.getDiscordUser(<generated>)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.check(UserCheckCmd.java:84)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.lambda$check$3(UserCheckCmd.java:79)
	at net.dv8tion.jda.api.exceptions.ContextException.lambda$here$0(ContextException.java:60)
	at net.dv8tion.jda.api.requests.Request.lambda$onFailure$1(Request.java:114)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
2019-10-03 15:08:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosedForWrite(JdbcConnection.java:1557)
	at org.h2.jdbc.JdbcConnection.rollback(JdbcConnection.java:561)
	at com.zaxxer.hikari.pool.ProxyConnection.rollback(ProxyConnection.java:370)
	at com.zaxxer.hikari.pool.HikariProxyConnection.rollback(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.rollback(AbstractLogicalConnectionImplementor.java:116)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.rollback(JdbcResourceLocalTransactionCoordinatorImpl.java:294)
	at org.hibernate.engine.transaction.internal.TransactionImpl.rollback(TransactionImpl.java:145)
	at org.springframework.orm.jpa.JpaTransactionManager.doRollback(JpaTransactionManager.java:559)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:838)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:812)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:552)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:299)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.triippztech.guildo.service.user.DiscordUserService$$EnhancerBySpringCGLIB$$c97a7d17.getDiscordUser(<generated>)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.check(UserCheckCmd.java:84)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.lambda$check$3(UserCheckCmd.java:79)
	at net.dv8tion.jda.api.exceptions.ContextException.lambda$here$0(ContextException.java:60)
	at net.dv8tion.jda.api.requests.Request.lambda$onFailure$1(Request.java:114)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
2019-10-03 15:08:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getWarnings(JdbcConnection.java:694)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getWarnings(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.handleAndClearWarnings(SqlExceptionHelper.java:290)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logAndClearWarnings(SqlExceptionHelper.java:269)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:194)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:239)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:175)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:327)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:433)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:419)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:426)
	at org.springframework.orm.jpa.JpaTransactionManager.doCleanupAfterCompletion(JpaTransactionManager.java:620)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:1007)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:878)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:812)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:552)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:299)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.triippztech.guildo.service.user.DiscordUserService$$EnhancerBySpringCGLIB$$c97a7d17.getDiscordUser(<generated>)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.check(UserCheckCmd.java:84)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.lambda$check$3(UserCheckCmd.java:79)
	at net.dv8tion.jda.api.exceptions.ContextException.lambda$here$0(ContextException.java:60)
	at net.dv8tion.jda.api.requests.Request.lambda$onFailure$1(Request.java:114)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
2019-10-03 15:08:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:708)
	at com.zaxxer.hikari.pool.HikariProxyConnection.clearWarnings(HikariProxyConnection.java)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.handleAndClearWarnings(SqlExceptionHelper.java:299)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logAndClearWarnings(SqlExceptionHelper.java:269)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:194)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:239)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:175)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:327)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:433)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:419)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:426)
	at org.springframework.orm.jpa.JpaTransactionManager.doCleanupAfterCompletion(JpaTransactionManager.java:620)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:1007)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:878)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:812)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:552)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:299)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.triippztech.guildo.service.user.DiscordUserService$$EnhancerBySpringCGLIB$$c97a7d17.getDiscordUser(<generated>)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.check(UserCheckCmd.java:84)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.lambda$check$3(UserCheckCmd.java:79)
	at net.dv8tion.jda.api.exceptions.ContextException.lambda$here$0(ContextException.java:60)
	at net.dv8tion.jda.api.requests.Request.lambda$onFailure$1(Request.java:114)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
2019-10-03 15:08:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.clearWarnings(JdbcConnection.java:708)
	at com.zaxxer.hikari.pool.ProxyConnection.close(ProxyConnection.java:242)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection(DatasourceConnectionProviderImpl.java:127)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.releaseConnection(NonContextualJdbcConnectionAccess.java:46)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.releaseConnection(LogicalConnectionManagedImpl.java:196)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.close(LogicalConnectionManagedImpl.java:239)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.close(JdbcCoordinatorImpl.java:175)
	at org.hibernate.internal.AbstractSharedSessionContract.close(AbstractSharedSessionContract.java:327)
	at org.hibernate.internal.SessionImpl.closeWithoutOpenChecks(SessionImpl.java:433)
	at org.hibernate.internal.SessionImpl.close(SessionImpl.java:419)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.closeEntityManager(EntityManagerFactoryUtils.java:426)
	at org.springframework.orm.jpa.JpaTransactionManager.doCleanupAfterCompletion(JpaTransactionManager.java:620)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:1007)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:878)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:812)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.completeTransactionAfterThrowing(TransactionAspectSupport.java:552)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:299)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.triippztech.guildo.service.user.DiscordUserService$$EnhancerBySpringCGLIB$$c97a7d17.getDiscordUser(<generated>)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.check(UserCheckCmd.java:84)
	at com.triippztech.guildo.commands.moderation.UserCheckCmd.lambda$check$3(UserCheckCmd.java:79)
	at net.dv8tion.jda.api.exceptions.ContextException.lambda$here$0(ContextException.java:60)
	at net.dv8tion.jda.api.requests.Request.lambda$onFailure$1(Request.java:114)
	at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
2019-10-03 15:09:26 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "GUILD_SERVER_STRIKE" not found; SQL statement:
select guildserve0_.id as id1_21_, guildserve0_.count as count2_21_, guildserve0_.guild_id as guild_id3_21_, guildserve0_.user_id as user_id4_21_ from guild_server_strike guildserve0_ where guildserve0_.id=? and guildserve0_.guild_id=? [42102-199]
2019-10-03 15:09:48 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 15:09:48 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:292)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 15:09:48 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1161)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 15:11:35 jdbc[4]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "GUILD_SERVER_STRIKE" not found; SQL statement:
select guildserve0_.id as id1_21_, guildserve0_.count as count2_21_, guildserve0_.guild_id as guild_id3_21_, guildserve0_.user_id as user_id4_21_ from guild_server_strike guildserve0_ where guildserve0_.id=? and guildserve0_.guild_id=? [42102-199]
2019-10-03 15:12:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:245)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 15:12:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.AbstractJdbcDatabase.rollback(AbstractJdbcDatabase.java:1114)
	at liquibase.lockservice.StandardLockService.acquireLock(StandardLockService.java:292)
	at liquibase.lockservice.StandardLockService.waitForLock(StandardLockService.java:207)
	at liquibase.Liquibase.update(Liquibase.java:184)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2019-10-03 15:12:01 jdbc[3]: exception
org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:617)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1571)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1547)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:521)
	at com.zaxxer.hikari.pool.HikariProxyConnection.getAutoCommit(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.rollback(JdbcConnection.java:335)
	at liquibase.database.jvm.JdbcConnection.close(JdbcConnection.java:110)
	at liquibase.database.AbstractJdbcDatabase.close(AbstractJdbcDatabase.java:1161)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:314)
	at org.springframework.boot.autoconfigure.liquibase.DataSourceClosingSpringLiquibase.afterPropertiesSet(DataSourceClosingSpringLiquibase.java:46)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:118)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$0(AsyncSpringLiquibase.java:93)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$1(ExceptionHandlingAsyncTaskExecutor.java:78)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
